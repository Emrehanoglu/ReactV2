{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emre\\\\Desktop\\\\reactV2\\\\react-router\\\\src\\\\pages\\\\help\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport { Form, redirect, useActionData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Contact = () => {\n  _s();\n  const errors = useActionData();\n  /* başka bir metot içerisindeki bilgiyi\r\n  formun post edilmesi anında bu şekilde alabilirim. */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0130leti\\u015Fim\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      method: \"post\",\n      action: \"/help/contact\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), err]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_s(Contact, \"MXG3vJWOluRyotNja3c0q7lD6Co=\", false, function () {\n  return [useActionData];\n});\n_c = Contact;\nexport const contactAction = async _ref => {\n  let {\n    request\n  } = _ref;\n  const data = await request.formData(); /* form üzerindeki name ile ilişkilendirilmiş alanlara ait bilgileri aldım */\n  const email = result.get(\"email\");\n  const message = result.get(\"message\");\n  const errors = {};\n  if (typeof email !== \"string\" || !email.includes(\"@\")) {\n    /* typeof ile tip kontrolü yapıyorum */\n    errors.email = \"email girmelisiniz\";\n  }\n  if (typeof message !== \"string\" || message.length < 10) {\n    errors.message = \"mesaj için en az 10 karakter girmelisiniz\";\n  }\n  if (Object.keys(errors).length) {\n    /* errors bilgisinin içerisi setlenmişse return ettim */\n    return errors;\n  }\n  return redirect(\"/\");\n};\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["Form","redirect","useActionData","Contact","errors","err","contactAction","request","data","formData","email","result","get","message","includes","length","Object","keys"],"sources":["C:/Users/Emre/Desktop/reactV2/react-router/src/pages/help/Contact.js"],"sourcesContent":["import {Form, redirect, useActionData} from \"react-router-dom\"\r\n\r\nexport const Contact = () => {\r\n    const errors = useActionData() \r\n    /* başka bir metot içerisindeki bilgiyi\r\n    formun post edilmesi anında bu şekilde alabilirim. */\r\n    return (\r\n        <div className=\"contact\">\r\n            <h3>İletişim</h3>\r\n            <Form method=\"post\" action=\"/help/contact\">\r\n                {/* \r\n                    form post olduğunda App.js içerisinde contact path 'i içerisinde\r\n                    ilişkilendirmiş olduğum action metodunu çalıştıracak.\r\n                */}\r\n                <div>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"text\" name=\"email\"/>\r\n                    {err}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"message\">Message</label>\r\n                    <textarea name=\"message\"></textarea>\r\n                </div>\r\n                <button type=\"submit\">Submit</button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const contactAction = async ({request}) => {\r\n    const data = await request.formData(); /* form üzerindeki name ile ilişkilendirilmiş alanlara ait bilgileri aldım */\r\n    const email = result.get(\"email\")\r\n    const message = result.get(\"message\")\r\n\r\n    const errors = {}\r\n    if(typeof email !== \"string\" || !email.includes(\"@\")){ /* typeof ile tip kontrolü yapıyorum */\r\n        errors.email = \"email girmelisiniz\"\r\n    }\r\n    if(typeof message !== \"string\" || message.length < 10){\r\n        errors.message = \"mesaj için en az 10 karakter girmelisiniz\"\r\n    }\r\n    if(Object.keys(errors).length){ /* errors bilgisinin içerisi setlenmişse return ettim */\r\n        return errors\r\n    }\r\n\r\n    return redirect(\"/\")\r\n}"],"mappings":";;AAAA,SAAQA,IAAI,EAAEC,QAAQ,EAAEC,aAAa,QAAO,kBAAkB;AAAA;AAE9D,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EACzB,MAAMC,MAAM,GAAGF,aAAa,EAAE;EAC9B;AACJ;EACI,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBACpB;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACjB,QAAC,IAAI;MAAC,MAAM,EAAC,MAAM;MAAC,MAAM,EAAC,eAAe;MAAA,wBAKtC;QAAA,wBACI;UAAO,OAAO,EAAC,OAAO;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpC;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAE,EAChCG,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAA,wBACI;UAAO,OAAO,EAAC,SAAS;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAQ,eACxC;UAAU,IAAI,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAClC,eACN;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;AAAA,GAzBYF,OAAO;EAAA,QACDD,aAAa;AAAA;AAAA,KADnBC,OAAO;AA2BpB,OAAO,MAAMG,aAAa,GAAG,cAAqB;EAAA,IAAd;IAACC;EAAO,CAAC;EACzC,MAAMC,IAAI,GAAG,MAAMD,OAAO,CAACE,QAAQ,EAAE,CAAC,CAAC;EACvC,MAAMC,KAAK,GAAGC,MAAM,CAACC,GAAG,CAAC,OAAO,CAAC;EACjC,MAAMC,OAAO,GAAGF,MAAM,CAACC,GAAG,CAAC,SAAS,CAAC;EAErC,MAAMR,MAAM,GAAG,CAAC,CAAC;EACjB,IAAG,OAAOM,KAAK,KAAK,QAAQ,IAAI,CAACA,KAAK,CAACI,QAAQ,CAAC,GAAG,CAAC,EAAC;IAAE;IACnDV,MAAM,CAACM,KAAK,GAAG,oBAAoB;EACvC;EACA,IAAG,OAAOG,OAAO,KAAK,QAAQ,IAAIA,OAAO,CAACE,MAAM,GAAG,EAAE,EAAC;IAClDX,MAAM,CAACS,OAAO,GAAG,2CAA2C;EAChE;EACA,IAAGG,MAAM,CAACC,IAAI,CAACb,MAAM,CAAC,CAACW,MAAM,EAAC;IAAE;IAC5B,OAAOX,MAAM;EACjB;EAEA,OAAOH,QAAQ,CAAC,GAAG,CAAC;AACxB,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}